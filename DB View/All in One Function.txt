CREATE  FUNCTION `date_conveter`(dtype varchar(15),rdate varchar(15)) RETURNS varchar(20) CHARSET utf8
    DETERMINISTIC
BEGIN
    DECLARE returndate varchar(15);
SET returndate='';
IF (dtype='EN')
THEN
 SELECT  need_addate INTO returndate from xw_need_nepequengdate WHERE need_bsdate=rdate;
ELSE
SELECT  need_bsdate INTO returndate from xw_need_nepequengdate WHERE need_addate=rdate;
END IF;
 RETURN (returndate);
END;



CREATE  FUNCTION `depwise_equipment`(descriptionid int,depid int) RETURNS int(20)
    DETERMINISTIC
BEGIN
    DECLARE desccnt int(10);
SET desccnt=0;

 SELECT  COUNT('*') INTO desccnt from xw_bmin_bmeinventory WHERE bmin_descriptionid=descriptionid AND bmin_departmentid=depid;
RETURN (desccnt);
END;


CREATE  FUNCTION `depwiseitem_issue`(itemid int,depid int, locationid int,stroid int,fromdate varchar(15),todate varchar(15)) RETURNS int(20)
    DETERMINISTIC
BEGIN
    DECLARE issueqty int(10);
SET issueqty=0;
IF(stroid<>0 AND locationid<>0)
THEN
 SELECT  SUM(issqty) INTO issueqty from xw_vw_depwiseitemissue WHERE sade_itemsid=itemid AND sade_locationid=locationid
AND storeid =stroid AND sama_depid=depid AND billdate BETWEEN fromdate AND todate ;
ELSE
SELECT  SUM(issqty) INTO issueqty from xw_vw_depwiseitemissue WHERE sade_itemsid=itemid  AND sama_depid=depid AND billdate BETWEEN fromdate AND todate ;
END IF; 
RETURN (issueqty);
END;




CREATE  FUNCTION `locationwise_issue`(itemid int,locationid int) RETURNS int(15)
    DETERMINISTIC
BEGIN
    DECLARE stockqty int(10);
SET stockqty=0;
 SELECT  SUM(issqty) INTO stockqty from xw_vw_locationwisestock WHERE trde_itemsid=itemid AND trde_locationid=locationid;
 RETURN (stockqty);
END;




CREATE  FUNCTION `month_dep_requisition`(`fyear` int,`mn` int,`did` int,isdep char,appst int,storeid int,locid int) RETURNS int(15)
BEGIN
	 DECLARE countreq int(10);
	 DECLARE apstatus varchar(25);
SET countreq=0;
IF (appst>=0 AND appst<=3)
THEN
		IF(locid<>0 AND storeid<>0)
		THEN
		SELECT  COUNT('*') INTO countreq  FROM  xw_vw_monthwise_dep_requisition WHERE fiscalyrs=fyear AND mnth=mn AND depid=did AND rema_isdep=isdep AND reqdep=storeid AND 
		locationid =locid AND appstatus=appst  ;
		ELSEIF(locid=0 AND storeid<>0)
		THEN
		SELECT  COUNT('*') INTO countreq  FROM  xw_vw_monthwise_dep_requisition WHERE fiscalyrs=fyear AND mnth=mn AND depid=did AND rema_isdep=isdep AND reqdep=storeid 
		AND appstatus=appst  ;
		ELSEIF(locid<>0 AND storeid=0)
		THEN
		SELECT  COUNT('*') INTO countreq  FROM  xw_vw_monthwise_dep_requisition WHERE fiscalyrs=fyear AND mnth=mn AND depid=did AND rema_isdep=isdep AND locationid =locid
		AND appstatus=appst  ;
		ELSE
		SELECT  COUNT('*') INTO countreq  FROM  xw_vw_monthwise_dep_requisition WHERE fiscalyrs=fyear AND mnth=mn AND depid=did AND rema_isdep=isdep
		AND appstatus=appst  ;
END IF;
 ELSE
		IF(locid<>0 AND storeid<>0)
		THEN
		SELECT  COUNT('*') INTO countreq  FROM  xw_vw_monthwise_dep_requisition WHERE fiscalyrs=fyear AND mnth=mn AND depid=did AND rema_isdep=isdep AND reqdep=storeid AND 
		locationid =locid ;
		ELSEIF(locid=0 AND storeid<>0)
		THEN
		SELECT  COUNT('*') INTO countreq  FROM  xw_vw_monthwise_dep_requisition WHERE fiscalyrs=fyear AND mnth=mn AND depid=did AND rema_isdep=isdep AND reqdep=storeid; 
		ELSEIF(locid<>0 AND storeid=0)
		THEN
		SELECT  COUNT('*') INTO countreq  FROM  xw_vw_monthwise_dep_requisition WHERE fiscalyrs=fyear AND mnth=mn AND depid=did AND rema_isdep=isdep AND locationid =locid;
		ELSE
		SELECT  COUNT('*') INTO countreq  FROM  xw_vw_monthwise_dep_requisition WHERE fiscalyrs=fyear AND mnth=mn AND depid=did AND rema_isdep=isdep;
		END IF;
END IF;
 RETURN (countreq);
END;




CREATE  FUNCTION `monthlywiseitem_issue`(itemid int,locationid int,stroid int,fyear varchar(15),mont int) RETURNS int(20)
    DETERMINISTIC
BEGIN
    DECLARE issueqty int(10);
SET issueqty=0;
IF(stroid<>0 AND locationid<>0)
THEN
 SELECT  SUM(issqty) INTO issueqty from xw_vw_depwiseitemissue WHERE sade_itemsid=itemid AND sade_locationid=locationid
AND storeid =stroid AND fiscalyrs=fyear AND mnth=mont ;
ELSEIF(stroid=0 AND locationid<>0)
THEN
 SELECT  SUM(issqty) INTO issueqty from xw_vw_depwiseitemissue WHERE sade_itemsid=itemid AND sade_locationid=locationid AND fiscalyrs=fyear AND mnth=mont ;
ELSEIF(stroid<>0 AND locationid=0)
THEN
 SELECT  SUM(issqty) INTO issueqty from xw_vw_depwiseitemissue WHERE sade_itemsid=itemid AND storeid =stroid AND fiscalyrs=fyear AND mnth=mont ;
ELSE
SELECT  SUM(issqty) INTO issueqty from xw_vw_depwiseitemissue WHERE sade_itemsid=itemid  AND mnth=mont ;
END IF; 
RETURN (issueqty);
END;





CREATE  FUNCTION `quotation_compare`(itemid int,suppid int,reqno int)
 RETURNS float(10,2)
    DETERMINISTIC
BEGIN
    DECLARE itemrate float(10,2);
SET itemrate=0.00;
IF(suppid<>0)
		THEN
		SELECT qude_netrate INTO itemrate from xw_quma_quotationmaster qm LEFT JOIN xw_qude_quotationdetail qd
		on qm.quma_quotationmasterid=qd.qude_quotationmasterid
		WHERE qd.qude_itemsid=itemid AND qm.quma_supplierid=suppid
		AND qm.quma_reqno =reqno;
ELSE
	SELECT MIN(qude_netrate) minrate INTO itemrate from xw_quma_quotationmaster qm LEFT JOIN xw_qude_quotationdetail qd
		on qm.quma_quotationmasterid=qd.qude_quotationmasterid
		WHERE qd.qude_itemsid=itemid
		AND qm.quma_reqno =reqno;
END IF;
RETURN (itemrate);
END;




CREATE  FUNCTION `supp_compare_rate`(itemid int,suppid int,uploadno int)
 RETURNS float(10,2)
    DETERMINISTIC
BEGIN
    DECLARE itemrate float(10,2);
SET itemrate=0.00;
IF(suppid<>0)
		THEN
		SELECT ured_totalamount INTO itemrate from xw_urem_uploadreqentrymaster um left JOIN xw_ured_uploadreqentrydetail ud
		on ud.ured_uremid=um.urem_uremid WHERE urem_uploadno=uploadno
		AND urem_supplierid=suppid AND ured_itemid=itemid;
ELSE
	SELECT MIN(ured_totalamount) minrate INTO itemrate from xw_urem_uploadreqentrymaster um left JOIN xw_ured_uploadreqentrydetail ud
		on ud.ured_uremid=um.urem_uremid WHERE urem_uploadno=uploadno
		AND ured_itemid=itemid;
END IF;
RETURN (itemrate);
END;



CREATE FUNCTION `get_issue_items_amount`(itemid int,masterid int)
 RETURNS int(20)
    DETERMINISTIC
BEGIN
    DECLARE totalamt int(10);
SET totalamt=0;
SELECT (CASE
		WHEN sade_unitrate <> 0 THEN
			SUM(sade_curqty * sade_unitrate)
		ELSE
			0
		END) INTO totalamt FROM xw_sade_saledetail sd WHERE sade_itemsid=itemid AND sade_salemasterid=masterid;
RETURN (issueqty);
END;



CREATE FUNCTION `fn_item_locationwise_stock`(itemid int,locationid int) RETURNS int(15)
    DETERMINISTIC
BEGIN
    DECLARE stockqty int(10);
SET stockqty=0;
SELECT lost_stockqty INTO stockqty  FROM xw_lost_locationstock ls
WHERE
		 ls.lost_locationid=locationid
		AND ls.lost_itemid=itemid LIMIT 1;
 RETURN (stockqty);
END